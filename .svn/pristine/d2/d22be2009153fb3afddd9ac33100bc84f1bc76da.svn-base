/*
 * ============================================================================
 * GNU Lesser General Public License
 * ============================================================================
 *
 * JasperReports - Free Java report-generating library.
 * Copyright (C) 2001-2006 JasperSoft Corporation http://www.jaspersoft.com
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.
 * 
 * JasperSoft Corporation
 * 303 Second Street, Suite 450 North
 * San Francisco, CA 94107
 * http://www.jaspersoft.com
 */

import java.awt.BorderLayout;
import java.awt.event.ActionListener;
import java.awt.print.Book;
import java.awt.print.PageFormat;
import java.awt.print.PrinterJob;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.zip.GZIPInputStream;

import javax.print.attribute.HashAttributeSet;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttribute;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.swing.JButton;
import javax.swing.JOptionPane;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRHyperlink;
import net.sf.jasperreports.engine.JRPrintHyperlink;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.print.JRPrinterAWT;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JRHyperlinkListener;

/**
 * @author wangpeng
 * @version 
 */
public class ReporterApplet extends javax.swing.JApplet{

	/**
	 *
	 */
	private boolean isURL=false;
	private List urlList=new ArrayList();

	/** Creates new form AppletViewer */
	public ReporterApplet() {
		initComponents();
	}

	/**
	*
	*/
	public void init() {
		//JOptionPane.showMessageDialog(this,"init");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents

	}// GEN-END:initComponents
	
	public void test(){
		JOptionPane.showMessageDialog(this, "test");
	}
	
	public void clearUrlList(){
		this.urlList.clear();
	}
	
	public void addReportURL(String url){
		try{
		ViewPrintURL urlObj=new ViewPrintURL(getCodeBase(),url);
		this.urlList.add(urlObj);
		}catch (Exception e) {
			e.printStackTrace();
			JOptionPane.showMessageDialog(this, "娣诲姞url鍑洪敊"+e.getMessage());
		}
	}
	
	public void addReportURL(String viewURL,String printURL){
		try{
			ViewPrintURL urlObj=new ViewPrintURL(getCodeBase(),viewURL,printURL);
			this.urlList.add(urlObj);
			}catch (Exception e) {
				e.printStackTrace();
				JOptionPane.showMessageDialog(this, "娣诲姞url鍑洪敊"+e.getMessage());
			}
	}
	
	public void isURL(int urlFlag){
		if(urlFlag==1){
			this.isURL=true;
		}else{
			this.isURL=false;
		}
	}
	
	public void showViewForm(){
		List jasperViewList = new ArrayList();//鏄剧ず镄勬姤琛?
		List jasperPrintList =  new ArrayList();//镓揿嵃镄勬姤琛?
		
			try {
				for(int index=0;index<urlList.size();index++){
					ViewPrintURL urlObj=(ViewPrintURL)urlList.get(index);
					URL viewUrl=urlObj.getViewUrl();
					URL printUrl=urlObj.getPrintUrl();
					//JOptionPane.showMessageDialog(this,viewUrl.toString());
					//鏄惁鍙紶URL
					if(isURL){
						jasperViewList.add(viewUrl);
						jasperPrintList.add(printUrl);
					}else{
						List viewList=(List)JRLoader.loadCompressObject(viewUrl);
						List printList=null;
						
						//濡傛灉print镄剈rl鍜寁iew镄勭浉鍚岋紝涓嶅啀閲嶅load
						if(printUrl==viewUrl){
							printList=viewList;
						}else{
							printList=(List)JRLoader.loadCompressObject(printUrl);
						}
						
						jasperViewList.addAll(viewList);
						jasperPrintList.addAll(printList);
					}
				}
				
				//璋幂敤鎶ヨ〃
				ViewerFrame viewerFrame = new ViewerFrame(this
							.getAppletContext(),jasperViewList,jasperPrintList,false);
					viewerFrame.show();
			} catch (Exception e) {
				StringWriter swriter = new StringWriter();
				PrintWriter pwriter = new PrintWriter(swriter);
				e.printStackTrace(pwriter);
				JOptionPane.showMessageDialog(this, swriter.toString());
			}
	}
}

/**棰勮鍜屾墦鍗版姤琛╱rl缁勫悎绫?/
class ViewPrintURL{
	ViewPrintURL(URL baseURL,String viewUrl)throws MalformedURLException{
		this.viewUrl=new URL(baseURL,viewUrl);
		this.printUrl=this.viewUrl;
	}
	ViewPrintURL(URL baseURL,String viewUrl,String printUrl)throws MalformedURLException{
		this.viewUrl=new URL(baseURL,viewUrl);
		this.printUrl=new URL(baseURL,printUrl);
	}
	private URL viewUrl;
	private URL printUrl;
	
	URL getViewUrl(){
		return viewUrl;
	}
	
	URL getPrintUrl(){
		return printUrl;
	}
}
