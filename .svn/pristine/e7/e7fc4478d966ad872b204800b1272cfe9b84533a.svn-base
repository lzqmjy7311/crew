package com.gbicc.person.monitor.operation;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;

import com.gbicc.bpm.BpmDescUtil;
import com.gbicc.bpm.service.ProcessManagerService;
import com.gbicc.common.FileUpDownProperties;
import com.gbicc.person.monitor.entity.TPlYjMonitor;
import com.gbicc.person.monitor.service.TPlYjMonitorService;
import com.gbicc.personCommon.entity.TPlTaskRuleTrig;
import com.gbicc.personCommon.entity.TPlTaskRuleTrigInfo;
import com.gbicc.warn.service.TPlTaskRuleTrigService;
import com.huateng.ebank.business.common.service.DataDicService;
import com.huateng.ebank.business.management.service.TlrInfoService;
import com.huateng.ebank.framework.exceptions.CommonException;
import com.huateng.ebank.framework.operation.BaseOperation;
import com.huateng.ebank.framework.operation.OperationContext;


/**
 * 
 * @author xudongdong
 *
 * 版本：2015年11月6日 下午2:47:27
 * 类说明：预警处置报告操作类
 */
public class TPlYjMonitorOperation extends BaseOperation {
	public static final String ID = "TPlYjMonitorOperation";
	public static final String CMD = "CMD";
	public static final String CMD_QUERY = "CMD_QUERY";
	public static final String CMD_INSERT = "CMD_INSERT";
	public static final String CMD_UPDATE = "CMD_UPDATE";
	public static final String CMD_DELETE = "CMD_DELETE";
	public static final String IN_PARAM = "IN_PARAM";
	public static final String IN_PARAM2 = "IN_PARAM2";
	public static final String YJ_MONITOR_PROCESS = "yj_monitor_process";
	/**
	 * 任务分发管理员-字典类型编码
	 */
	public static final String TASK_DISTRIBUTE_MNG_TYPE="task_distribute_mng_type";
	/**
	 * 任务分发管理员-字典码
	 */
	public static final String TASK_DISTRIBUTE_MNG_CODE="task_distribute_mng_code";
	
	@Override
	public void afterProc(OperationContext context) throws CommonException {
	}

	@Override
	public void beforeProc(OperationContext context) throws CommonException {
	}

	@Override
	public void execute(OperationContext context) throws CommonException {
		String cmd = (String) context.getAttribute(CMD);
		String duty=null;
		TPlYjMonitor monitor = (TPlYjMonitor) context.getAttribute(IN_PARAM);
		TPlTaskRuleTrig tPlTaskRuleTrig = (TPlTaskRuleTrig) context.getAttribute(IN_PARAM2);
		TPlYjMonitorService service = TPlYjMonitorService.getInstance();
		TPlTaskRuleTrigService  tPlTaskRuleTrigService=TPlTaskRuleTrigService.getInstance();
		ProcessManagerService processManagerService=ProcessManagerService.getInstace();
		TlrInfoService tlrService=TlrInfoService.getInstance();
		TPlTaskRuleTrigInfo trigInfo=new TPlTaskRuleTrigInfo();
		if (CMD_QUERY.equals(cmd)) {
		} else if (CMD_INSERT.equals(cmd)) {
			duty= processManagerService.findCheckDutyUserId(monitor.getLoanAcct());
			trigInfo=processManagerService.findTPlTrigInfo(monitor.getLoanAcct());
			
			if(StringUtils.isNotEmpty(duty)){
				monitor.setHandler(tlrService.getTlrInfoByTlrno(duty));
			}else{
				Integer dicType=Integer.parseInt(FileUpDownProperties.readValue(TASK_DISTRIBUTE_MNG_TYPE));
				String dicNo=FileUpDownProperties.readValue(TASK_DISTRIBUTE_MNG_CODE);
				String dicName=DataDicService.getInstance().getNameByTypeNo(dicType,dicNo);
				monitor.setHandler(tlrService.getTlrInfoByTlrno(dicName));
			}
			monitor.setLoanVariety(trigInfo.getProdname()); //产品代码
			monitor.setCustName(trigInfo.getCustname());//客户名称
			monitor.setCustCode(trigInfo.getCustid());//客户编号
			monitor.setLoanAmt((trigInfo.getTcapi()).doubleValue());//贷款金额
			monitor.setLoanBalance((trigInfo.getBal()).doubleValue());//贷款余额
			monitor.setLoanTerm((trigInfo.getTterm()).toString());//贷款期限
			monitor.setWaykind(trigInfo.getWaykind());//所属行业
			monitor.setAssukind(trigInfo.getAssukind());//担保方式
			monitor.setFloatinterate(trigInfo.getFloatinterate());//浮动比例
			monitor.setAcflag(trigInfo.getAcflag());//账户状态
			monitor.setRiskflag(trigInfo.getRiskflag());//风险分类
			service.save(monitor);
			if(tPlTaskRuleTrig!=null){//人工触发预警处置报告
				tPlTaskRuleTrigService.update(tPlTaskRuleTrig);//修改规则预警 结果表 	
			}
			
			//启动任务
			String procKey=FileUpDownProperties.readValue(YJ_MONITOR_PROCESS);
			ProcessManagerService pms=ProcessManagerService.getInstace();
			Map<String, Object> map=new HashMap<String, Object>();
			map.put("assignee",monitor.getHandler().getTlrno());
			map.put("desc",BpmDescUtil.getDesc(monitor.getId(),monitor.getCustCode(),monitor.getCustName()));
			pms.startProcess(monitor.getId(),procKey,(String)map.get("assignee"),map);
		} else if (CMD_UPDATE.equals(cmd)) {
			service.update(monitor);
		} else if (CMD_DELETE.equals(cmd)) {
			service.delete(monitor);
		}
	}
}
