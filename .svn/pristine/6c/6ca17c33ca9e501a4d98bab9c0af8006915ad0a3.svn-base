package com.gbicc.company.single.getter;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;

import com.gbicc.bpm.service.ProcessManagerService;
import com.gbicc.company.single.entity.TCmSingleRulCases;
import com.gbicc.company.single.operation.TCmSingleRulInvestigationOperation;
import com.huateng.common.err.Module;
import com.huateng.common.err.Rescode;
import com.huateng.commquery.result.Result;
import com.huateng.commquery.result.ResultMng;
import com.huateng.ebank.business.common.GlobalInfo;
import com.huateng.ebank.business.common.PageQueryResult;
import com.huateng.ebank.entity.dao.mng.ROOTDAO;
import com.huateng.ebank.entity.dao.mng.ROOTDAOUtils;
import com.huateng.ebank.framework.web.commQuery.BaseGetter;
import com.huateng.exception.AppException;

public class TCmSingleRulCasesGetter extends BaseGetter {

	@Override
	public Result call() throws AppException {
		try {
			PageQueryResult pageResult = getData();
			ResultMng.fillResultByList(getCommonQueryBean(),
					getCommQueryServletRequest(), pageResult.getQueryResult(),
					getResult());
			result.setContent(pageResult.getQueryResult());
			result.getPage().setTotalPage(
					pageResult.getPageCount(getResult().getPage()
							.getEveryPage()));
			result.init();
			return result;
		} catch (AppException appEx) {
			throw appEx;
		} catch (Exception ex) {
			throw new AppException(Module.SYSTEM_MODULE,
					Rescode.DEFAULT_RESCODE, ex.getMessage(), ex);
		}
	}

	@SuppressWarnings("rawtypes")
	protected PageQueryResult getData() throws Exception {
		String id = (String) getCommQueryServletRequest().getParameterMap().get("id");
		GlobalInfo info=GlobalInfo.getCurrentInstance();
		String userId=info.getTlrno();
		PageQueryResult pageQueryResult = new PageQueryResult();
		// 分页大小
		int pageSize = getResult().getPage().getEveryPage();
		// 页码
		int pageIndex = getResult().getPage().getCurrentPage();
		ROOTDAO rootdao = ROOTDAOUtils.getROOTDAO();
		StringBuffer hql = new StringBuffer("select t1 from TCmSingleRulCases t1,ActiveTask t2  where t1.id=t2.businessKey");
		hql.append(" and t2.assignee='").append(userId).append("'");
		if(StringUtils.isNotEmpty(id)){
			hql.append(" and t1.id='"+id+"' ");
		}
		pageQueryResult = rootdao.pageQueryByHql(pageIndex, pageSize,hql.toString());
		
		List list=pageQueryResult.getQueryResult();
		for(int i=0;i<list.size();i++){
			TCmSingleRulCases cases=(TCmSingleRulCases) list.get(i);
			Map<String, Integer> map=geNumb(cases.getId());
			cases.setWarnCount(map.get("warnCount"));
			cases.setInveCount(map.get("inveCount"));
			cases.setAlreInveCount(map.get("alreInveCount"));
		}
		return pageQueryResult;
	}
	
	public Map<String, Integer> geNumb(String casesId) throws Exception{
		ROOTDAO rootdao = ROOTDAOUtils.getROOTDAO();
		String warnNumSql="select count(id) from TCmSingleRulWarning where casesId='"+casesId+"' ";
		Object obj=rootdao.queryByHqlToCount(warnNumSql);
		String inveNumSql="select count(id) from TCmSingleRulInvestigation where casesId='"+casesId+"' ";
		Object obj2=rootdao.queryByHqlToCount(inveNumSql);
		String compInveNumSql="select count(id) from TCmSingleRulInvestigation where casesId='"+casesId+"' and status='"+TCmSingleRulInvestigationOperation.STATUS_ALREADY_INVE+"' ";
		Object obj3=rootdao.queryByHqlToCount(compInveNumSql);
		Map<String,Integer> map=new HashMap<String, Integer>();
		map.put("warnCount",Integer.valueOf(obj.toString()));
		map.put("inveCount",Integer.valueOf(obj2.toString()));
		map.put("alreInveCount",Integer.valueOf(obj3.toString()));
		return map;
	}
}
