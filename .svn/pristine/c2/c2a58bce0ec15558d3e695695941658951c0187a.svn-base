package com.gbicc.company.financial.analysis.getter;

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.util.StringUtils;

import com.gbicc.bpm.operation.TaskAfreshAssignOperation;
import com.gbicc.company.financial.analysis.entity.FinanceCourseData;
import com.gbicc.company.financial.analysis.entity.FinanceIndexData;
import com.gbicc.util.DateUtils;
import com.huateng.common.err.Module;
import com.huateng.common.err.Rescode;
import com.huateng.commquery.result.Result;
import com.huateng.commquery.result.ResultMng;
import com.huateng.ebank.business.common.PageQueryCondition;
import com.huateng.ebank.business.common.PageQueryResult;
import com.huateng.ebank.entity.dao.mng.ROOTDAO;
import com.huateng.ebank.entity.dao.mng.ROOTDAOUtils;
import com.huateng.ebank.framework.util.ApplicationContextUtils;
import com.huateng.ebank.framework.web.commQuery.BaseGetter;
import com.huateng.exception.AppException;

@SuppressWarnings("unchecked")
public class FinCourseGetter extends BaseGetter {

	@Override
	public Result call() throws AppException {
		try {
			PageQueryResult pageResult = getData();
			ResultMng.fillResultByList(getCommonQueryBean(),getCommQueryServletRequest(), pageResult.getQueryResult(),getResult());
			result.setContent(pageResult.getQueryResult());
			result.getPage().setTotalPage(pageResult.getPageCount(getResult().getPage().getEveryPage()));
			result.init();
			return result;
		} catch (AppException appEx) {
			throw appEx;
		} catch (Exception ex) {
			throw new AppException(Module.SYSTEM_MODULE,Rescode.DEFAULT_RESCODE, ex.getMessage(), ex);
		}
	}

	public PageQueryResult getData() throws Exception {
		DateUtils dataUtils=new DateUtils();
		String sjzyear = (String) getCommQueryServletRequest().getParameterMap().get("jzyear");
		if (sjzyear!=null&&!sjzyear.equals("")){
		int    jzYear=0;
		if(org.apache.commons.lang3.StringUtils.isNotEmpty(sjzyear)||!"".equals(sjzyear)){
			jzYear=Integer.valueOf(sjzyear);
		}
				
		String caliber = (String) getCommQueryServletRequest().getParameterMap().get("caliber");
		String srepno = (String) getCommQueryServletRequest().getParameterMap().get("repno");
		int repno=0;
		String project=(String) getCommQueryServletRequest().getParameterMap().get("project");//统计项
		String firstStr=null;
		JdbcTemplate jdbcTemplate=(JdbcTemplate) ApplicationContextUtils.getBean("JdbcTemplate");
		int i=project.indexOf(",");
		firstStr=project.substring(0,i);
		String QuerySql="SELECT COUNT(1) FROM ECUSER.T_CM_FINANCE_STATEMENT_CODE E WHERE E.PROJECT_CD='"+firstStr+"'";
		int j=jdbcTemplate.queryForInt(QuerySql);
		if(j==0){
			project=project.substring(i+1);
		}
			
		if(org.apache.commons.lang3.StringUtils.isNotEmpty(srepno)||!"".equals(srepno)){
			repno=Integer.valueOf(srepno);
		}		
		String finType = (String) getCommQueryServletRequest().getParameterMap().get("finType");//财报类型（1资产负债、2损益表、3现金流量表）
		String customerNum = (String) getCommQueryServletRequest().getParameterMap().get("customerNum");
//		customerNum="000008203631";
		ROOTDAO rootdao=ROOTDAOUtils.getROOTDAO();
		Date firstDeadline=new Date();
		Date secondDeadline=new Date();
		Date threeDeadline=new Date();
		firstDeadline=dataUtils.getFirstDeadline(jzYear, caliber, repno);//本期
		secondDeadline=dataUtils.getSecondDeadline(jzYear, caliber, repno);//上期
		threeDeadline=dataUtils.getThreeDeadline(jzYear, caliber, repno);//上上期
		
		SimpleDateFormat simple=new SimpleDateFormat("yyyyMMdd");
		String  firstDeadlines=simple.format(firstDeadline);
		String  secondDeadlines=simple.format(secondDeadline);
		String  threeDeadlines=simple.format(threeDeadline);
		String  temp=caliber;
		if (caliber!=null&&!caliber.equals("")){
			temp=(Integer.parseInt(caliber)-706)+"";
		}
		String sql= " SELECT T1.PROJECT_CD AS projectId ,T1.PROJECT_NAME AS projectName ,T1.PROJECT_VALUE  AS stringType,T1.ADD_UP_PROJECT_VALUE AS projectAddValue,T2.PROJECT_VALUE AS sStringType,T3.PROJECT_VALUE AS ssStringType  FROM  FIN_COURSE_V T1"
				+ " LEFT JOIN FIN_COURSE_V T2 ON T1.PROJECT_CD =T2.PROJECT_CD AND T1.REPORT_TYPE=T2.REPORT_TYPE AND T1.CUSTOMER_NUM=T2.CUSTOMER_NUM  AND T1.CALIBER_CD=T2.CALIBER_CD   AND T2.DEADLINE='"+secondDeadlines+"'	                                                                                            "
				+ " LEFT JOIN FIN_COURSE_V T3 ON T1.PROJECT_CD =T3.PROJECT_CD AND T1.REPORT_TYPE=T3.REPORT_TYPE AND T1.CUSTOMER_NUM=T3.CUSTOMER_NUM  AND T1.CALIBER_CD=T3.CALIBER_CD  AND T3.DEADLINE='"+threeDeadlines+"'                                                                                    "
				+ " where    T1.REPORT_TYPE='"+finType+"'                                                                                                 "
				+ " AND T1.CALIBER_CD='"+temp+"' AND T1.DEADLINE='"+firstDeadlines+"'        AND T1.CUSTOMER_NUM='"+customerNum +"' ";
		if(null!=project&&!"".equals(project)){
			    sql=sql+" AND T1.PROJECT_CD IN("+project+") ";
		}
		
		sql=sql+" ORDER BY T1.PROJECT_CD";                                                                                  
		int pageSize = getResult().getPage().getEveryPage();// 分页大小
		int pageIndex = getResult().getPage().getCurrentPage();// 页码
		
		PageQueryCondition queryCondition = new PageQueryCondition();
		queryCondition.setPageIndex(pageIndex);
		queryCondition.setPageSize(pageSize);
		queryCondition.setQueryString(sql.toString());
		 
		 List<FinanceCourseData> listT=jdbcTemplate.query(sql, BeanPropertyRowMapper.newInstance(FinanceCourseData.class));
	
		 PageQueryResult pageQueryResult = new PageQueryResult();
		 pageQueryResult.setQueryResult(listT);
		 pageQueryResult.setTotalCount(listT.size());
		//queryCondition.setObjArray(param.toArray());
//		PageQueryResult result = (PageQueryResult) rootdao.pageQueryBySQL(queryCondition);
//		List<Object[]> list=result.getQueryResult();
//		List<Map<String,String>> resultList=new ArrayList<Map<String,String>>();
//		for(Object[] obj:list){
//			Map<String,String> map=new HashMap<String, String>();
//			map.put("procInstId",obj[0]!=null?obj[0].toString():"");
//			map.put("financeStatementName",obj[1]!=null?obj[1].toString():"");
//			map.put("projectValue",obj[2]!=null?obj[2].toString():"");
//			map.put("sProjectValue",obj[3]!=null ? obj[3].toString() : "");
//			map.put("ssProjectValue",obj[4].toString());
//		
//			resultList.add(map);
//		}
//		result.setQueryResult(resultList);
		return pageQueryResult;
		}else{
			PageQueryResult pageQueryResult = new PageQueryResult();

			return pageQueryResult;
		}
	}
	public void strtostrsz(String project){
		project.indexOf(",");
	}
}
